@using UtilityExtensions;
@using CmsWeb;
@model CmsWeb.Models.EmailModel
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/SiteLayout.cshtml";
    CassetteBundleConfiguration.BundleRefJs();
    Bundles.AddInlineScript(
        @<script type="text/javascript">
             $(function() {
                 $("#filter").change(function() {
                     window.location = window.location.pathname + "?filter=" + $(this).val();
                 });
                 $("table.grid > tbody > tr:even").addClass("alt");
                 $(".bt").button();
             });

         </script>);
}

@Html.ActionLink("Back to List", "Index")
@{
    var ts = new TimeSpan(0);
    if (Model.queue.Sent.HasValue && Model.queue.Started.HasValue) {
        ts = Model.queue.Sent.Value.Subtract(Model.queue.Started.Value);
    }
    var dt = new DateTime(ts.Ticks);
}
<table class="roundbox">
<tr><td colspan="2"><h2>Details</h2></td></tr>
<tr><td>QueuedBy</td><td>@Model.queue.QueuedBy</td></tr>
<tr><td>FromName</td><td>@Model.queue.FromName</td></tr>
<tr><td>FromAddr</td><td>@Model.queue.FromAddr</td></tr>
<tr><td>Count</td><td>@Model.GetEmailTos().Count()</tr>
<tr><td>Opens</td>
    <td>@Model.queue.EmailResponses.Count()
        @Html.DropDownList("filter", new SelectList( new string[] 
                                       { 
                                           "All", 
                                           "Opened", 
                                           "Not Opened",
                                           "Failed"
                                       }))
    </td></tr>
<tr><td>Unique Opens</td><td>@Model.queue.EmailResponses.Select(er => er.PeopleId).Distinct().Count()</td></tr>
<tr><td>SendWhen</td><td>@Model.queue.SendWhen.FormatDateTm()</td></tr>
<tr><td>Sent</td><td>@Model.queue.Sent.FormatDateTm()</td></tr>
<tr><td>Queued</td><td>@Model.queue.Queued.FormatDateTm() 
@if (Model.CanDelete())
{
    <a href="/Manage/Emails/DeleteQueued/@Model.queue.Id" class="bt">Delete</a>
}
    </td></tr>
<tr><td>Started</td><td>@Model.queue.Started.FormatDateTm()</td></tr>
<tr><td>RunTime</td><td>@dt.ToString("H:mm:ss")</td></tr>
</table>
@if (Model.queue.PublicX ?? false)
{
@Html.ActionLink("View Email", "View", new { id = Model.id })
}
else if (User.IsInRole("Admin") || Model.queue.QueuedBy == Util.UserPeopleId)
{
    <a href="/Manage/Emails/MakePublic/@Model.queue.Id" class="bt">Make Public</a>
    if (Model.queue.Transactional == true)
    {
        <a href="/Manage/Emails/Resend/@Model.queue.Id" class="bt">Resend</a>
    }
}
<div class="red"><b>@TempData["message"]</b></div>
<h2>@Html.Raw(Model.queue.Subject)</h2>
<div style="max-width: 600px">@Html.Raw(Model.queue.Body)</div>
<hr />
<h2>Recipients</h2>
<form action="/Manage/Emails/Recipients/@Model.id" method="post">
@{Html.RenderPartial("Recipients", Model);}
</form>