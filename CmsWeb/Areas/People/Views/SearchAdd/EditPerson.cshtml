@model CmsWeb.Areas.People.Models.SearchPersonModel
@{
    var noShowCampusDropdown = (new string[] {"org", "pending", "visitor", "registered"}).Contains(Model.context);
}
@Html.EditorFor(m => m.Title)
@*    <td>@Html.DropDownList3(null, "m.List[" + Model.index + "].title", Model.TitleCodes(), Model.title)*@
@*        @Html.ValidationMessage("title")*@
<tr>
    <td class="bottom">Name<span class="red">*</span></td>
    <td>
        <table id="nametable" style="border-collapse: collapse">
            <tr style="font-size: 85%">
                <td style="padding-left: 2px;">First</td>
                <td>Middle</td>
                <td style="padding-left: 2px;">Last</td>
                <td>Suffix</td>
            </tr>
            <tr>
                <td>
                    <input type="text" name="m.List[@Model.index].first" value="@Model.First" />
                    <input type="hidden" name="m.List[@Model.index].context" value="@Model.context" />
                </td>
                <td>
                    <input type="text" name="m.List[@Model.index].middle" value="@Model.Middle" class="short" /></td>
                <td>
                    <input type="text" name="m.List[@Model.index].last" value="@Model.Last" /></td>
                <td>
                    <input type="text" name="m.List[@Model.index].suffix" value="@Model.Suffix" class="short" /></td>
            </tr>
        </table>
        <div>@Html.ValidationMessage("name")</div>
    </td>
    <tr>
        <td>Goes by<span class="white">*</span></td>
        <td>
            <input type="text" name="m.List[@Model.index].goesby" value="@Model.GoesBy" />
            <span>@Html.ValidationMessage("goesby")</span>
        </td>
    </tr>
<tr>
    <td>Date of Birth<span class="red">*</span></td>
    <td>
        <input type="text" name="m.List[@Model.index].dob" value="@Model.dob" class="dob" />
        <span>@Html.ValidationMessage("dob")</span>
    </td>
</tr>
<tr>
    <td>Cell Phone<span class="red">*</span></td>
    <td>
        <input type="text" name="m.List[@Model.index].phone" value="@Model.Phone" />
        <span>@Html.ValidationMessage("phone")</span>
    </td>
</tr>
<tr>
    <td>Email<span class="red">*</span></td>
    <td>
        <input type="text" name="m.List[@Model.index].email" value="@Model.Email" />
        <span>@Html.ValidationMessage("email")</span>
    </td>
</tr>
<tr>
    <td>Gender<span class="red">*</span></td>
    <td>@Html.DropDownList3(null, "m.List[" + Model.index + "].gender", Model.GenderCodes(), Model.Gender.ToString())
        <span>@Html.ValidationMessage("gender")</span>
    </td>
</tr>
<tr>
    <td>Marital<span class="red">*</span></td>
    <td>@Html.DropDownList3(null, "m.List[" + Model.index + "].marital", Model.MaritalStatuses(), Model.Marital.ToString())
        <span>@Html.ValidationMessage("marital")</span>
    </td>
</tr>
<tr>
        <td>Campus<span class="white">*</span></td>
        <td>
        @if (noShowCampusDropdown)
        {
            var lu = Model.CampusCodes().SingleOrDefault(cc => cc.Value == Model.Campus.ToString());
            @(lu == null ? "(not specified)" : lu.Text)
            <input type="hidden" name="m.List[@Model.index].campus" value="@Model.Campus" />
        }
        else
        {
            @Html.DropDownList3(null, "m.List[" + Model.index + "].campus", Model.CampusCodes(), Model.Campus.ToString())
        }
        </td>
    </tr>
    <tr>
        <td>Entry Point Code<span class="white">*</span></td>
        <td>
        @if (noShowCampusDropdown)
        {
            var lu = Model.EntryPointCodes().SingleOrDefault(cc => cc.Value == Model.EntryPoint.ToString());
            @(lu == null ? "(not specified)" : lu.Text)
            <input type="hidden" name="m.List[@Model.index].entrypoint" value="@Model.EntryPoint" />
        }
        else
        {
            @Html.DropDownList3(null, "m.List[" + Model.index + "].entrypoint", Model.EntryPointCodes(), Model.EntryPoint.ToString())
        }
        </td>
    </tr>
